allow booting;
allow bootp;
ddns-update-style interim;
option routers default_router;
not authoritative;

option space pxelinux;
option pxelinux.magic      code 208 = string;
option pxelinux.configfile code 209 = text;
option pxelinux.pathprefix code 210 = text;
option architecture-type   code 93  = unsigned integer 16;

vendor-option-space pxelinux;
option pxelinux.magic f1:00:74:7e;
if exists dhcp-parameter-request-list {
    # Always send the PXELINUX options (specified in hexadecimal)
    option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list,d0,d1,d2,d3);
}

option pxelinux.pathprefix "/warewulf/";

# IB Clients
if substring(hardware,0,1) = 20 {

    # Make IB PXE devices look in the correct place for their pxelinux configuration file.
    # Ensure the configuration filename is properly zero padded.
    option pxelinux.configfile = concat (
        "pxelinux.cfg/20-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 12, 1))),2), "-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 13, 1))),2), "-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 14, 1))),2), "-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 15, 1))),2), "-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 16, 1))),2), "-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 17, 1))),2), "-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 18, 1))),2), "-",
        suffix (concat ("0", binary-to-ascii (16, 8, "",
          substring (option dhcp-client-identifier, 19, 1))),2));

    filename "tftp://%{IPADDR}/warewulf/loader/pcbios/pxelinux.0";
# Ethernet Clients
} else {
    if option architecture-type = 00:0B {
        filename "/warewulf/loader/arm64-efi/placeholder.efi";
    } elsif option architecture-type = 00:0A {
        filename "/warewulf/loader/arm32-efi/placeholder.efi";
    } elsif option architecture-type = 00:09 {
        filename "/warewulf/loader/x86_64-efi/syslinux.efi";
    } elsif option architecture-type = 00:07 {
        filename "/warewulf/loader/x86_64-efi/syslinux.efi";
    } elsif option architecture-type = 00:06 {
        filename "/warewulf/loader/i386-efi/syslinux.efi";
    } elsif option architecture-type = 00:00 {
        filename "/warewulf/loader/pcbios/lpxelinux.0";
    }
}

subnet %{NETWORK} netmask %{NETMASK} {
   not authoritative;
   # option interface-mtu 9000;
   option subnet-mask %{NETMASK};
}

# Node entries will follow below

